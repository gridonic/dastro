---
import type { AstroComponent, Module } from '../component.types';

interface Props {
  module: Module;
  Component: AstroComponent;
}

const { module, Component } = Astro.props;
const key = module.__typename
  .replace(/([a-z])([A-Z])/g, '$1-$2')
  .slice(0, -7)
  .toLowerCase();
---

<section
  class="content-module"
  id={module.id ? `module-${key}-${module.id}` : undefined}
  class:list={{
    module: true,
    [`-${key}`]: true,
  }}
  data-module={module.__typename
    .replace(/([a-z])([A-Z])/g, '$1.$2')
    .slice(0, -7)}
>
  {Component && <Component data={module} />}
  {
    !Component && module.__typename && (
      <mark class="mark">No Component registered for {module?.__typename}</mark>
    )
  }
</section>

<style lang="scss">
  .content-module {
    &:has(.mark) {
      position: relative;

      > .mark {
        display: block;
        padding: var(--base-component-padding);
        background-color: #ffad8f;
        border-top: 1px solid Canvas;
        font-size: 1.75rem;
        color: Canvas;
      }
    }
  }
</style>
